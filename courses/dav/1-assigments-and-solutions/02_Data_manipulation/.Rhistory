library(ISLR)
library(tidyverse)
library(haven)
library(readxl)
object_1 <- 1:5
object_2 <- 1L:5L
object_3 <- "-123.456"
object_4 <- as.numeric(object_2)
object_5 <- letters[object_1]
object_6 <- as.factor(rep(object_5, 2))
object_7 <- c(1, 2, 3, "4", "5", "6")
typeof(object:"")
typeof(object_2)
typeof(object_4)
object_2
object_4
object_7 <- as.numeric(object_7)
??haven
?haven
class(object:1)
class(object_1)
typeof(object_1)
object_7 <- as.numeric(object_7)
object_7
objects <- list(object_1, object_2, object_3, object_4, object_5, object_6,
object_7)
objects
dat <- data.frame(Var1 = object_1, Var2 = object_2, Var3 = object_5)
elc <- data.frame(object_1, object_2, object_3)
elc
dat
ncol(dat)
nrow(dat)
apps <- read_csv("data/googleplaystore.csv")
head(apps)
csv_read(data/students.xlsx)
read_csv(data/students.xlsx)
read_csv(02_Data_manipulation/data/students.xlsx)
read_csv("02_Data_manipulation/data/students.xlsx")
read_csv(02_Data_manipulation/data/students.xlsx)
read_csv(02\_Data\_manipulation/data/students.xlsx)
read_csv(02\_Data_manipulation/data/students.xlsx)
read_csv(02\_Data_manipulation/data/students.xlsx)
read_csv(\02_Data_manipulation/data/students.xlsx)
read_csv(data/students.xlsx)
read_csv(data/students.xlsx)
read_csv(data/students.xlsx)
readxl(data/students.xlsx)
library(ISLR)
library(tidyverse)
library(haven)
library(readxl)
readxl(data/students.xlsx)
read_xlsx(data/students.xlsx)
students <- read_xlsx("data/students.xlsx"")
students <- readxl("data/students.xlsx"")
students <- read_xlsx("data/students.xlsx"")
install.packages("readxl")
install.packages("readxl")
library(readxl)
students <- readxl("data/students.xlsx"")
students <- readxl("data/students.xlsx")
students <- read_xlsx("data/students.xlsx")
tail(students)
head(students)
summary(students)
summary(students[1:3])
summary(students[1])
summary(students[3])
summary(students[2])
?filter
?filter()
grade_less_five <- fiter(students, students$grade < 5)
grade_less_five <- filter(students, students$grade < 5)
grade_less_five <- filter(students, grade < 5)
grade_less_five <- filter(students, grade < 5)
df_students <- data.frame(students)
grade_less_five <- filter(students, grade < 5)
grade_less_five <- filter(df_students, grade < 5)
filter(students, grade < 5.5)
students <- read_xlsx("data/students.xlsx")
pwd
pwd()
getpwd
getpwd()
getwd()
students <- read_xlsx("02_Data_manipulation/data/students.xlsx")
tail(students)
head(students)
summary(students)
grade_less_five <- filter(students, grade < 5.5)
filter(students, grade < 5.5)
filter(students, grade < 5.5)
students
View(students)
grade_less_five <- filter(students, students$grade < 5.5)
grade_less_five
df_students <- data.frame(students)
students
grade_less_five <- filter(students, grade < 5.5)
grade_less_five
grade_less_five <- filter(students, [,2] < 5.5)
students <- read_xlsx("02_Data_manipulation/data/students.xlsx")
tail(students)
head(students)
#df_students <- data.frame(students)
grade_less_five <- filter(students, students[,2] < 5.5)
grade_less_five
students <- read_xlsx("data/students.xlsx")
filter(students, grade < 5.5)
#Shows only the students with a grade higher than 8 from A
grade.higher.eight.a <- filter(students, grade > 8, students$programme == "A")
grade.higher.eight.a
#Sort students on top of the data and with highest grade
sorted.a <- arrange(students, programme == "A", desc(grades))
#Show the sutdet_number and programme columns
selected.two <- select(students, number, programme)
library(dplyr)
#Show the sutdet_number and programme columns
selected.two <- select(students, number, programme)
#Show the sutdet_number and programme columns
selected.two <- select(students, student_number, programme)
selected.two
#Sort students on top of the data and with highest grade
sorted.a <- arrange(students, programme, desc(grades))
#Sort students on top of the data and with highest grade
sorted.a <- arrange(students, programme, desc(grade))
sorted.a
grade.higher.eight.a <- filter(students, grade > 8, programme ==
grade.higher.eight.a
grade.higher.eight.a
students <- (students, pass = grade >5.5)
students <- mutate(students, pass = grade >5.5)
students
?recode
students_recoded <- mutate(students, programme =  recode("A" = "Science", "B" = "Social Sciences"))
students_recoded <- recode(student, programme =  recode("A" = "Science", "B" = "Social Sciences"))
students_recoded <- recode(students, programme =  recode("A" = "Science", "B" = "Social Sciences"))
students_recoded <- mutate(students, programme = recode(programme =  recode("A" = "Science", "B" = "Social Sciences")))
students_recoded <- mutate(students, programme = recode(programme,  recode("A" = "Science", "B" = "Social Sciences")))
students_recoded <- mutate(students, programme = recode(programme,"A" = "Science", "B" = "Social Sciences")))
students_recoded <- mutate(students, programme = recode(programme,"A" = "Science", "B" = "Social Sciences"))
students_recoded
# The task we just did can therefore be piped in the following way
students_dataset <-
read_xlsx("data/students.xlsx") %>%
mutate(prog = recode(programme, "A" = "Science", "B" = "Social Science")) %>% filter(grade > 5.5) %>%
arrange(programme, -grade) %>%
select(student_number, prog, grade)
# The task we just did can therefore be piped in the following way
students_dataset <-
read_xlsx("02_Data_manipulation/data/students.xlsx") %>%
mutate(prog = recode(programme, "A" = "Science", "B" = "Social Science")) %>% filter(grade > 5.5) %>%
arrange(programme, -grade) %>%
select(student_number, prog, grade)
students_dataset
View("googleplaystore")
View("02_Data_manipulation.Rproj/data/googleplaystore")
View(02_Data_manipulation.Rproj/data/googleplaystore)
read.csv("02_Data_manipulation/data/googleplaystore.csv")
read.csv("02_Data_manipulation/data/googleplaystore.csv") %>%
mutate(Downloads = parse_number(Installs, "+"))
library(ISLR)
library(tidyverse)
library(haven)
library(readxl)
read.csv("02_Data_manipulation/data/googleplaystore.csv") %>%
mutate(Downloads = parse_number(Installs, "+"))
popular.apps <-
read.csv("02_Data_manipulation/data/googleplaystore.csv") %>%
mutate(Downloads = parse_number(Installs, "+")) %>%
filter(Downloads > 500000000) %>%
arrange(Rating) %>%
select(Rating, Category, Install)
popular.apps <-
read.csv("02_Data_manipulation/data/googleplaystore.csv") %>%
mutate(Downloads = parse_number(Installs, "+")) %>%
filter(Downloads > 500000000) %>%
arrange(Rating) %>%
select(Rating, Category, Installs)
popular.apps
popular.apps <-
read.csv("02_Data_manipulation/data/googleplaystore.csv") %>%
mutate(Downloads = parse_number(Installs, "+")) %>%
filter(Downloads > 500000000) %>%
arrange(Rating) %>%
select(Rating, Category, Installs) %>%
distinct(App, .keep_all = TRUE)
students_dataset %>%
summarise(
mean = mean(grade), variance = var(grade), min = min(grade),
max = max(grade)
)
popular.apps %>%
summarise(
median = median(rating), variance = var(rating),
min = min(rating), max = max(rating)
)
popular.apps %>%
summarise(
median = median(Rating), variance = var(Rating),
min = min(Rating), max = max(Rating)
)
mad <- function(x) {
median(abs(x - median(x)))
}
students_dataset %>% summarise(mad = mad(grade))
popular.apps %>%
summarise(
median = median(Rating), variance = var(Rating),
min = min(Rating), max = max(Rating),
mad = mad(Rating)
)
popular.apps %>%
group_by(Category) %>%
summarise(
median = median(Rating),
variance = var(Rating),
min = min(Rating),
max = max(Rating),
mad = mad(Rating)
)
popular.apps %>%
filter(Category = "GAME" or "COMMUNICATION") %>%
popular.apps %>%
filter(Category = "GAME" || "COMMUNICATION") %>%
summarise(
median = median(Rating),
variance = var(Rating),
min = min(Rating),
max = max(Rating),
mad = mad(Rating)
)
popular.apps %>%
filter(Category %in% c("GAME", "COMMUNICATION") %>%
summarise(
median = median(Rating),
variance = var(Rating),
min = min(Rating),
max = max(Rating),
mad = mad(Rating)
)
popular.apps %>%
filter(Category == %in% c("GAME", "COMMUNICATION") %>%
popular.apps %>%
filter(Category == %in% c("GAME", "COMMUNICATION")) %>%
popular.apps %>%
filter(Category %in% c("GAME", "COMMUNICATION")) %>%
summarise(
median = median(Rating),
variance = var(Rating),
min = min(Rating),
max = max(Rating),
mad = mad(Rating)
)
popular.apps %>%
group_by(Category) %>%
summarise(
median = median(Rating),
variance = var(Rating),
min = min(Rating),
max = max(Rating),
mad = mad(Rating)
)
read_csv("data/googleplaystore.csv") %>%
filter(Category %in% c("GAME","COMMUNICATION")) %>%
select(App, Category, Rating) %>%
distinct(App, .keep_all = TRUE) %>%
group_by(Category) %>%
summarise(
mean = mean(Rating, na.rm = TRUE),
median = median(Rating, na.rm = TRUE)
)
# Or to write it fully
read_csv("02_Data_manipulation/data/googleplaystore.csv") %>%
filter(Category %in% c("GAME","COMMUNICATION")) %>%
select(App, Category, Rating) %>%
distinct(App, .keep_all = TRUE) %>%
group_by(Category) %>%
summarise(
mean = mean(Rating, na.rm = TRUE),
median = median(Rating, na.rm = TRUE)
)
